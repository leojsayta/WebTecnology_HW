//1. Problem0001: Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 
//  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... 
//  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. 

var isEven = function (num) {
    return (num % 2 === 0) ? true : false;
};

var isOdd = function (num) {
    return !(isEven(num));
};

var sumDigits = function (filterFcn, endCond) {
    var sum = 0;
    var xn, xn1 = 1, xn2 = 0;

    loopy:while (true) {

        xn = xn1 + xn2;

        if (xn > endCond)
            break loopy;

        if (filterFcn(xn))
            sum += xn;

        xn2 = xn1;
        xn1 = xn;
    }

    return sum;
};


(function () {
    "use strict";

    var s = sumDigits(isEven, 4000000);
    console.log("The sum of the even-valued Fib terms under 4000000 is:  " + s);

}());